<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="C:\Users\Kudos\Desktop\fluent-build\compile\FluentBuildWithTests.dll" total="138" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2010-09-28" time="15:17:50">
  <environment nunit-version="2.5.7.10213" clr-version="2.0.50727.4952" os-version="Microsoft Windows NT 6.1.7600.0" platform="Win32NT" cwd="C:\Users\Kudos\Desktop\fluent-build" machine-name="KUDOS-LAPTOP" user="Kudos" user-domain="Kudos-Laptop" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="Assembly" name="C:\Users\Kudos\Desktop\fluent-build\compile\FluentBuildWithTests.dll" executed="True" result="Success" success="True" time="2.040" asserts="0">
    <results>
      <test-suite type="Namespace" name="FluentBuild" executed="True" result="Success" success="True" time="2.020" asserts="0">
        <results>
          <test-suite type="Namespace" name="ApplicationProperties" executed="True" result="Success" success="True" time="0.583" asserts="0">
            <results>
              <test-suite type="TestFixture" name="CommandLinePropertiesTests" executed="True" result="Success" success="True" time="0.081" asserts="0">
                <results>
                  <test-case name="FluentBuild.ApplicationProperties.CommandLinePropertiesTests.ShouldConstructWithProperties" executed="True" result="Success" success="True" time="0.040" asserts="1" />
                  <test-case name="FluentBuild.ApplicationProperties.CommandLinePropertiesTests.ShouldGetAndSetProperly" executed="True" result="Success" success="True" time="0.012" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CruiseControlPropertiesTests" executed="True" result="Success" success="True" time="0.027" asserts="0">
                <results>
                  <test-case name="FluentBuild.ApplicationProperties.CruiseControlPropertiesTests.AllPropertiesShouldMap" executed="True" result="Success" success="True" time="0.027" asserts="10" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="TeamCityPropertiesTests" executed="True" result="Success" success="True" time="0.463" asserts="0">
                <results>
                  <test-case name="FluentBuild.ApplicationProperties.TeamCityPropertiesTests.BuildNumberShouldCallToWrapper" executed="True" result="Success" success="True" time="0.456" asserts="0" />
                  <test-case name="FluentBuild.ApplicationProperties.TeamCityPropertiesTests.ConfigurationNameShouldCallToWrapper" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                  <test-case name="FluentBuild.ApplicationProperties.TeamCityPropertiesTests.ProjectName" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="Namespace" name="AssemblyInfoBuilding" executed="True" result="Success" success="True" time="0.025" asserts="0">
            <results>
              <test-suite type="TestFixture" name="AssemblyInfoDetailsTests" executed="True" result="Success" success="True" time="0.003" asserts="0">
                <results>
                  <test-case name="FluentBuild.AssemblyInfoBuilding.AssemblyInfoDetailsTests.ImportShouldNotAllowDuplicates" executed="True" result="Success" success="True" time="0.003" asserts="2" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="AssemblyInfoLanguageTests" executed="True" result="Success" success="True" time="0.006" asserts="0">
                <results>
                  <test-case name="FluentBuild.AssemblyInfoBuilding.AssemblyInfoLanguageTests.EnsureCSharpLanguageBuildsProperly" executed="True" result="Success" success="True" time="0.002" asserts="3" />
                  <test-case name="FluentBuild.AssemblyInfoBuilding.AssemblyInfoLanguageTests.EnsureVisualBasicLanguageBuildsProperly" executed="True" result="Success" success="True" time="0.002" asserts="3" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CSharpAssemblyInfoBuilderTests" executed="True" result="Success" success="True" time="0.007" asserts="0">
                <results>
                  <test-case name="FluentBuild.AssemblyInfoBuilding.CSharpAssemblyInfoBuilderTests.ShouldBuildString" executed="True" result="Success" success="True" time="0.006" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="VisualBasicAssemblyInfoBuilderTests" executed="True" result="Success" success="True" time="0.004" asserts="0">
                <results>
                  <test-case name="FluentBuild.AssemblyInfoBuilding.VisualBasicAssemblyInfoBuilderTests.ShouldBuildString" executed="True" result="Success" success="True" time="0.003" asserts="1" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="Namespace" name="Compilation" executed="True" result="Success" success="True" time="0.202" asserts="0">
            <results>
              <test-suite type="TestFixture" name="BuildTaskTests" executed="True" result="Success" success="True" time="0.029" asserts="0">
                <results>
                  <test-case name="FluentBuild.Compilation.BuildTaskTests.Args_ShouldCreateProperArgs" executed="True" result="Success" success="True" time="0.005" asserts="1" />
                  <test-case name="FluentBuild.Compilation.BuildTaskTests.Args_ShouldCreateProperArgs_With_Fileset_Resources" executed="True" result="Success" success="True" time="0.006" asserts="1" />
                  <test-case name="FluentBuild.Compilation.BuildTaskTests.Args_ShouldCreateProperArgs_With_Resources" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                  <test-case name="FluentBuild.Compilation.BuildTaskTests.Args_ShouldCreateProperArgs_With_Sources" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-case name="FluentBuild.Compilation.BuildTaskTests.Args_ShouldCreateProperArgs_With_Sources_And_Debug_Symbols" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                  <test-case name="FluentBuild.Compilation.BuildTaskTests.Args_ShouldCreateProperReferences" executed="True" result="Success" success="True" time="0.003" asserts="1" />
                  <test-case name="FluentBuild.Compilation.BuildTaskTests.OutputFileTo_ShouldWorkWithBuildArtifact" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-case name="FluentBuild.Compilation.BuildTaskTests.UsingCsc_Compiler_Should_Be_CSC" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-case name="FluentBuild.Compilation.BuildTaskTests.UsingCsc_Compiler_Should_Be_VBC" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="MsBuildTaskTests" executed="True" result="Success" success="True" time="0.098" asserts="0">
                <results>
                  <test-case name="FluentBuild.Compilation.MsBuildTaskTests.BuildArgs_ShouldAddConfigurationIfSpecified" executed="True" result="Success" success="True" time="0.047" asserts="1" />
                  <test-case name="FluentBuild.Compilation.MsBuildTaskTests.BuildArgs_ShouldHaveFirstArgAsProjectOrSolution" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="FluentBuild.Compilation.MsBuildTaskTests.BuildArgs_ShouldHaveTarget" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                  <test-case name="FluentBuild.Compilation.MsBuildTaskTests.BuildArgs_ShouldNotHaveConfigurationIfNoneSpecified" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-case name="FluentBuild.Compilation.MsBuildTaskTests.BuildArgs_ShouldSetOutDirIfTrailingSlashIsNotSet" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-case name="FluentBuild.Compilation.MsBuildTaskTests.BuildArgs_ShouldSetOutDirIfTrailingSlashIsSet" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-case name="FluentBuild.Compilation.MsBuildTaskTests.Execute_ShouldExecuteMsBuild" executed="True" result="Success" success="True" time="0.032" asserts="0" />
                  <test-case name="FluentBuild.Compilation.MsBuildTaskTests.ShouldSetConfiguration" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="FluentBuild.Compilation.MsBuildTaskTests.ShouldSetOutDir" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-case name="FluentBuild.Compilation.MsBuildTaskTests.ShouldSetProperty" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-case name="FluentBuild.Compilation.MsBuildTaskTests.ShouldSetSolutionPath" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-case name="FluentBuild.Compilation.MsBuildTaskTests.ShouldSetTarget" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ResgenTests" executed="True" result="Success" success="True" time="0.055" asserts="0">
                <results>
                  <test-case name="FluentBuild.Compilation.ResgenTests.Execute_ShouldNotFindSdk" executed="True" result="Success" success="True" time="0.040" asserts="0" />
                  <test-case name="FluentBuild.Compilation.ResgenTests.Execute_ShouldRunAgainstMock" executed="True" result="Success" success="True" time="0.008" asserts="0" />
                  <test-case name="FluentBuild.Compilation.ResgenTests.GenerateFrom_ShouldPopulateFiles" executed="True" result="Success" success="True" time="0.002" asserts="2" />
                  <test-case name="FluentBuild.Compilation.ResgenTests.OutputTo_ShouldPopulatePathAndNotBeNull" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                  <test-case name="FluentBuild.Compilation.ResgenTests.PrefixOutputsWith_ShouldSetPrefixProperly" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ResourceTests" executed="True" result="Success" success="True" time="0.003" asserts="0">
                <results>
                  <test-case name="FluentBuild.Compilation.ResourceTests.CreateShouldBuildProperly" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                  <test-case name="FluentBuild.Compilation.ResourceTests.IfEmptyNameThenJustValueShouldBeReturned" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-case name="FluentBuild.Compilation.ResourceTests.ShouldCreateQuotedString" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="TargetTests" executed="True" result="Success" success="True" time="0.006" asserts="0">
                <results>
                  <test-case name="FluentBuild.Compilation.TargetTests.CreateExe" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                  <test-case name="FluentBuild.Compilation.TargetTests.CreateLibrary" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                  <test-case name="FluentBuild.Compilation.TargetTests.CreateModule" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                  <test-case name="FluentBuild.Compilation.TargetTests.CreateWindowsExe" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="Namespace" name="Core" executed="True" result="Success" success="True" time="0.057" asserts="0">
            <results>
              <test-suite type="TestFixture" name="AssemblyInfoTests" executed="True" result="Success" success="True" time="0.001" asserts="0">
                <results>
                  <test-case name="FluentBuild.Core.AssemblyInfoTests.MethodCallShouldNotThrowException" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Build_Tests" executed="True" result="Success" success="True" time="0.004" asserts="0">
                <results>
                  <test-case name="FluentBuild.Core.Build_Tests.ShouldCreateMsBuildTask" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="FluentBuild.Core.Build_Tests.ShouldCreateTaskWithCSCCompiler" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-case name="FluentBuild.Core.Build_Tests.ShouldCreateTaskWithVbCompiler" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="BuildFileTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="FluentBuild.Core.BuildFileTests.TestThatQueueGetsProcessed" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="MessageLoggerTests" executed="True" result="Success" success="True" time="0.012" asserts="0">
                <results>
                  <test-case name="FluentBuild.Core.MessageLoggerTests.Write_ShouldCreateProperlyIndentedLines" executed="True" result="Success" success="True" time="0.004" asserts="1" />
                  <test-case name="FluentBuild.Core.MessageLoggerTests.Write_ShouldWrapLongLines" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="FluentBuild.Core.MessageLoggerTests.WriteBlankLine_ShouldCreateNewLine" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-case name="FluentBuild.Core.MessageLoggerTests.WriteDebugMessage_ShouldNotWriteIfDebugTurnedOff" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-case name="FluentBuild.Core.MessageLoggerTests.WriteDebugMessage_ShouldWriteIfDebugTurnedOn" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-case name="FluentBuild.Core.MessageLoggerTests.WriteHeader" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="PropertiesTests" executed="True" result="Success" success="True" time="0.006" asserts="0">
                <results>
                  <test-case name="FluentBuild.Core.PropertiesTests.CommandLineShouldReturnProperObject" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-case name="FluentBuild.Core.PropertiesTests.CruiseControlShouldReturnProperObject" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-case name="FluentBuild.Core.PropertiesTests.CurrentDirectoryShouldBeProper" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="FluentBuild.Core.PropertiesTests.TeamCityShouldReturnProperObject" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="RunTests" executed="True" result="Success" success="True" time="0.007" asserts="0">
                <results>
                  <test-case name="FluentBuild.Core.RunTests.Run_Should_Populate_Exe" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-case name="FluentBuild.Core.RunTests.Run_Should_Populate_Exe_When_Using_Build_Artifact" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-case name="FluentBuild.Core.RunTests.UnitTestFramework_ShouldCreateObject" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-case name="FluentBuild.Core.RunTests.Zip_ShouldCreateObject" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="Namespace" name="Database" executed="True" result="Success" success="True" time="0.574" asserts="0">
            <results>
              <test-suite type="TestFixture" name="DatabaseTests" executed="True" result="Success" success="True" time="0.001" asserts="0">
                <results>
                  <test-case name="FluentBuild.Database.DatabaseTests.ShouldCreateProperObject" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="MsSqlConnectionTests" executed="True" result="Success" success="True" time="0.506" asserts="0">
                <results>
                  <test-case name="FluentBuild.Database.MsSqlConnectionTests.ShouldCreateMsSqlUtilities" executed="True" result="Success" success="True" time="0.468" asserts="1" />
                  <test-case name="FluentBuild.Database.MsSqlConnectionTests.ShouldCreateMsSqlUtilitiesAndHaveEngineBuilt" executed="True" result="Success" success="True" time="0.037" asserts="3" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="MsSqlCreateOrUpdateTests" executed="True" result="Success" success="True" time="0.035" asserts="0">
                <results>
                  <test-case name="FluentBuild.Database.MsSqlCreateOrUpdateTests.ShouldSetPropertyOnEngine" executed="True" result="Success" success="True" time="0.035" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="MsSqlCreateTests" executed="True" result="Success" success="True" time="0.003" asserts="0">
                <results>
                  <test-case name="FluentBuild.Database.MsSqlCreateTests.ShouldSetPathOnEngine" executed="True" result="Success" success="True" time="0.003" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="MsSqlUpdateTests" executed="True" result="Success" success="True" time="0.003" asserts="0">
                <results>
                  <test-case name="FluentBuild.Database.MsSqlUpdateTests.VersionTable_ShouldSetVersionOnEngine" executed="True" result="Success" success="True" time="0.003" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="MsSqlUtilitiesTests" executed="True" result="Success" success="True" time="0.007" asserts="0">
                <results>
                  <test-case name="FluentBuild.Database.MsSqlUtilitiesTests.CreateOrUpdate_ShouldCreateProperType" executed="True" result="Success" success="True" time="0.003" asserts="1" />
                  <test-case name="FluentBuild.Database.MsSqlUtilitiesTests.DoesDatabaseAlreadyExist_ShouldCallUnderlyingEngine" executed="True" result="Success" success="True" time="0.003" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="MsSqlVersionTableTests" executed="True" result="Success" success="True" time="0.003" asserts="0">
                <results>
                  <test-case name="FluentBuild.Database.MsSqlVersionTableTests.ExecuteShouldCallUnderlyingEngine" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="Namespace" name="FilesAndDirectories" executed="True" result="Success" success="True" time="0.322" asserts="0">
            <results>
              <test-suite type="TestFixture" name="BuildArtifactTests" executed="True" result="Success" success="True" time="0.044" asserts="0">
                <results>
                  <test-case name="FluentBuild.FilesAndDirectories.BuildArtifactTests.Copy_ShouldCreateCopyObject" executed="True" result="Success" success="True" time="0.005" asserts="1" />
                  <test-case name="FluentBuild.FilesAndDirectories.BuildArtifactTests.Delete_ShouldCallToFileSystemWrapper" executed="True" result="Success" success="True" time="0.033" asserts="0" />
                  <test-case name="FluentBuild.FilesAndDirectories.BuildArtifactTests.Rename_ShouldBuildRenameObject" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                  <test-case name="FluentBuild.FilesAndDirectories.BuildArtifactTests.ToString_Should_Output_Path" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="BuildFolderTests" executed="True" result="Success" success="True" time="0.069" asserts="0">
                <results>
                  <test-case name="FluentBuild.FilesAndDirectories.BuildFolderTests.Create_Should_Build_File" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-case name="FluentBuild.FilesAndDirectories.BuildFolderTests.Create_Should_Build_Recursive_And_SubFolder" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                  <test-case name="FluentBuild.FilesAndDirectories.BuildFolderTests.Create_Should_Build_SubFolder" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-case name="FluentBuild.FilesAndDirectories.BuildFolderTests.Create_Should_Have_Path" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-case name="FluentBuild.FilesAndDirectories.BuildFolderTests.CreateDirecory_ShouldCallWrapper" executed="True" result="Success" success="True" time="0.003" asserts="0" />
                  <test-case name="FluentBuild.FilesAndDirectories.BuildFolderTests.DeleteDirecory_ShouldDeleteIfFolderExists" executed="True" result="Success" success="True" time="0.007" asserts="0" />
                  <test-case name="FluentBuild.FilesAndDirectories.BuildFolderTests.Files_ShouldCreateFileset" executed="True" result="Success" success="True" time="0.048" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CopyBuildArtifactTests" executed="True" result="Success" success="True" time="0.019" asserts="0">
                <results>
                  <test-case name="FluentBuild.FilesAndDirectories.CopyBuildArtifactTests.ArtifactCopyShouldRenameFile" executed="True" result="Success" success="True" time="0.005" asserts="0" />
                  <test-case name="FluentBuild.FilesAndDirectories.CopyBuildArtifactTests.BuildFolderCopyShouldMoveToNewFolder" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                  <test-case name="FluentBuild.FilesAndDirectories.CopyBuildArtifactTests.PerformTokenReplacement" executed="True" result="Success" success="True" time="0.004" asserts="1" />
                  <test-case name="FluentBuild.FilesAndDirectories.CopyBuildArtifactTests.StringCopyShouldRenameFile" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="Namespace" name="FileSet" executed="True" result="Success" success="True" time="0.152" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="CopyFilesetTests" executed="True" result="Success" success="True" time="0.005" asserts="0">
                    <results>
                      <test-case name="FluentBuild.FilesAndDirectories.FileSet.CopyFilesetTests.To_ShouldPerformCopy" executed="True" result="Success" success="True" time="0.005" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="FileSetTests" executed="True" result="Success" success="True" time="0.041" asserts="0">
                    <results>
                      <test-case name="FluentBuild.FilesAndDirectories.FileSet.FileSetTests.AddAllCsFiles" executed="True" result="Success" success="True" time="0.023" asserts="2" />
                      <test-case name="FluentBuild.FilesAndDirectories.FileSet.FileSetTests.AddAllCsFilesAndExcludeGenericFileName" executed="True" result="Success" success="True" time="0.005" asserts="0" />
                      <test-case name="FluentBuild.FilesAndDirectories.FileSet.FileSetTests.AddAllCsFilesAndExcludeSpecificFileName" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                      <test-case name="FluentBuild.FilesAndDirectories.FileSet.FileSetTests.BuildFileSet" executed="True" result="Success" success="True" time="0.003" asserts="2" />
                      <test-case name="FluentBuild.FilesAndDirectories.FileSet.FileSetTests.BuildFileSetFromArtifact" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                      <test-case name="FluentBuild.FilesAndDirectories.FileSet.FileSetTests.CopyShouldNotBeNull" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="FileSystemUtilityTests" executed="True" result="Success" success="True" time="0.047" asserts="0">
                    <results>
                      <test-case name="FluentBuild.FilesAndDirectories.FileSet.FileSystemUtilityTests.Should_Call_Parser_For_Path_Containing_Wildcard" executed="True" result="Success" success="True" time="0.042" asserts="0" />
                      <test-case name="FluentBuild.FilesAndDirectories.FileSet.FileSystemUtilityTests.Should_Not_Call_Parser_For_Path_Containing_No_Wildcards" executed="True" result="Success" success="True" time="0.003" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="SearchPatternParserTests" executed="True" result="Success" success="True" time="0.051" asserts="0">
                    <results>
                      <test-case name="FluentBuild.FilesAndDirectories.FileSet.SearchPatternParserTests.GetAllFilesMatching_JustDirectory" executed="True" result="Success" success="True" time="0.003" asserts="3" />
                      <test-case name="FluentBuild.FilesAndDirectories.FileSet.SearchPatternParserTests.GetAllFilesMatching_Name_And_WildCard" executed="True" result="Success" success="True" time="0.039" asserts="3" />
                      <test-case name="FluentBuild.FilesAndDirectories.FileSet.SearchPatternParserTests.GetAllFilesMatching_Recursive_Name_And_WildCard" executed="True" result="Success" success="True" time="0.001" asserts="3" />
                      <test-case name="FluentBuild.FilesAndDirectories.FileSet.SearchPatternParserTests.GetAllFilesMatching_Recursive_Start_Dot_CS_Filter" executed="True" result="Success" success="True" time="0.001" asserts="3" />
                      <test-case name="FluentBuild.FilesAndDirectories.FileSet.SearchPatternParserTests.GetAllFilesMatching_Start_Dot_CS_Filter" executed="True" result="Success" success="True" time="0.001" asserts="3" />
                      <test-case name="FluentBuild.FilesAndDirectories.FileSet.SearchPatternParserTests.GetAllFilesMatching_Start_Dot_Start_Filter" executed="True" result="Success" success="True" time="0.001" asserts="3" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="RenameBuildArtifactTests" executed="True" result="Success" success="True" time="0.027" asserts="0">
                <results>
                  <test-case name="FluentBuild.FilesAndDirectories.RenameBuildArtifactTests.ShouildContinueOnError" executed="True" result="Success" success="True" time="0.013" asserts="0" />
                  <test-case name="FluentBuild.FilesAndDirectories.RenameBuildArtifactTests.ShouldCallWrapperMoveFile" executed="True" result="Success" success="True" time="0.009" asserts="0" />
                  <test-case name="FluentBuild.FilesAndDirectories.RenameBuildArtifactTests.ShouldFailOnError" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="Namespace" name="Runners" executed="True" result="Success" success="True" time="0.103" asserts="0">
            <results>
              <test-suite type="Namespace" name="UnitTesting" executed="True" result="Success" success="True" time="0.092" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="NUnitRunnerTests" executed="True" result="Success" success="True" time="0.086" asserts="0">
                    <results>
                      <test-case name="FluentBuild.Runners.UnitTesting.NUnitRunnerTests.AddParameter_ShouldAddToInteralDictionary" executed="True" result="Success" success="True" time="0.003" asserts="2" />
                      <test-case name="FluentBuild.Runners.UnitTesting.NUnitRunnerTests.AddSingleParameter_ShouldAddToInteralDictionary" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                      <test-case name="FluentBuild.Runners.UnitTesting.NUnitRunnerTests.BuildArgs_ShouldConstructWithFileToTest" executed="True" result="Success" success="True" time="0.005" asserts="1" />
                      <test-case name="FluentBuild.Runners.UnitTesting.NUnitRunnerTests.BuildArgs_ShouldConstructWithFileToTestAndNameValueParameter" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                      <test-case name="FluentBuild.Runners.UnitTesting.NUnitRunnerTests.BuildArgs_ShouldConstructWithFileToTestAndSingleParameter" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                      <test-case name="FluentBuild.Runners.UnitTesting.NUnitRunnerTests.Execute_ShouldCallExecuteMethodOnMock" executed="True" result="Success" success="True" time="0.027" asserts="0" />
                      <test-case name="FluentBuild.Runners.UnitTesting.NUnitRunnerTests.Execute_ShouldSetOnErrorStateToFalse" executed="True" result="Success" success="True" time="0.005" asserts="1" />
                      <test-case name="FluentBuild.Runners.UnitTesting.NUnitRunnerTests.Execute_ShouldSetOnErrorStateToTrue" executed="True" result="Success" success="True" time="0.006" asserts="1" />
                      <test-case name="FluentBuild.Runners.UnitTesting.NUnitRunnerTests.Execute_ShouldSetWorkingDirectoryOnMockIfManuallySpecifiedInCode" executed="True" result="Success" success="True" time="0.007" asserts="0" />
                      <test-case name="FluentBuild.Runners.UnitTesting.NUnitRunnerTests.Execute_ShouldThrowExceptionIfPathToExeNotSetAndCanNotBeFound" executed="True" result="Success" success="True" time="0.005" asserts="0" />
                      <test-case name="FluentBuild.Runners.UnitTesting.NUnitRunnerTests.Execute_ShouldTryToFindPathToNunitIfNotSet" executed="True" result="Success" success="True" time="0.007" asserts="0" />
                      <test-case name="FluentBuild.Runners.UnitTesting.NUnitRunnerTests.FileToTest_ShouldPopulateInternalFieldAndReturnSelf" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                      <test-case name="FluentBuild.Runners.UnitTesting.NUnitRunnerTests.PathToConsoleRunner_ShouldPopulateInternalFieldAndReturnSelf" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                      <test-case name="FluentBuild.Runners.UnitTesting.NUnitRunnerTests.WorkingDirectory_ShouldPopulateInternalFieldAndReturnSelf" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="FluentBuild.Runners.UnitTesting.NUnitRunnerTests.XmlOutputTo_ShouldPopulatePropertiesAndReturnSelf" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="UnitTestFrameworkRunTests" executed="True" result="Success" success="True" time="0.002" asserts="0">
                    <results>
                      <test-case name="FluentBuild.Runners.UnitTesting.UnitTestFrameworkRunTests.Nunit_ShouldCreateNunitRunner" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="Namespace" name="Zip" executed="True" result="Success" success="True" time="0.006" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="ZipCompressTests" executed="True" result="Success" success="True" time="0.003" asserts="0">
                    <results>
                      <test-case name="FluentBuild.Runners.Zip.ZipCompressTests.TestSomething" executed="True" result="Success" success="True" time="0.002" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="ZipTests" executed="True" result="Success" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="FluentBuild.Runners.Zip.ZipTests.TestSomething" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="Namespace" name="Tokenization" executed="True" result="Success" success="True" time="0.013" asserts="0">
            <results>
              <test-suite type="TestFixture" name="TokenReplacerTests" executed="True" result="Success" success="True" time="0.010" asserts="0">
                <results>
                  <test-case name="FluentBuild.Tokenization.TokenReplacerTests.Replace_ShouldReplaceMultipleTokens" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-case name="FluentBuild.Tokenization.TokenReplacerTests.Replace_ShouldReplaceToken" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-case name="FluentBuild.Tokenization.TokenReplacerTests.To_ShouldFailIfFileExists" executed="True" result="Success" success="True" time="0.003" asserts="0" />
                  <test-case name="FluentBuild.Tokenization.TokenReplacerTests.To_ShouldWriteOutFileIfFileDoesNotExist" executed="True" result="Success" success="True" time="0.003" asserts="0" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="Namespace" name="Utilities" executed="True" result="Success" success="True" time="0.105" asserts="0">
            <results>
              <test-suite type="TestFixture" name="ExecuteableTests" executed="True" result="Success" success="True" time="0.013" asserts="0">
                <results>
                  <test-case name="FluentBuild.Utilities.ExecuteableTests.CreateProcess_Should_Build_Process" executed="True" result="Success" success="True" time="0.007" asserts="1" />
                  <test-case name="FluentBuild.Utilities.ExecuteableTests.Executable_ShouldSetProperly" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                  <test-case name="FluentBuild.Utilities.ExecuteableTests.ShouldConstructProperly" executed="True" result="Success" success="True" time="0.001" asserts="3" />
                  <test-case name="FluentBuild.Utilities.ExecuteableTests.ShouldPopulateWorkingDirectoryViaArtifact" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="FileFinderTests" executed="True" result="Success" success="True" time="0.012" asserts="0">
                <results>
                  <test-case name="FluentBuild.Utilities.FileFinderTests.Find_ShouldSearchFileSystem" executed="True" result="Success" success="True" time="0.007" asserts="0" />
                  <test-case name="FluentBuild.Utilities.FileFinderTests.Find_ShouldSearchFileSystemRecursively" executed="True" result="Success" success="True" time="0.005" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="WindowsSdkFinderTests" executed="True" result="Success" success="True" time="0.077" asserts="0">
                <results>
                  <test-case name="FluentBuild.Utilities.WindowsSdkFinderTests.IsWindowsSdkInstalledShouldFailIfNoKeyIsFound" executed="True" result="Success" success="True" time="0.028" asserts="1" />
                  <test-case name="FluentBuild.Utilities.WindowsSdkFinderTests.IsWindowsSdkInstalledShouldPassIfKeyIsFound" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                  <test-case name="FluentBuild.Utilities.WindowsSdkFinderTests.PathToHighestVersion_ShouldFailIfRegistryKeyDeletedWhileItIsBeingRead" executed="True" result="Success" success="True" time="0.034" asserts="0" />
                  <test-case name="FluentBuild.Utilities.WindowsSdkFinderTests.PathToHighestVersionedSdkShouldFailIfSdkIsNotInstalled" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                  <test-case name="FluentBuild.Utilities.WindowsSdkFinderTests.PathToHighestVersionedSdkShouldFindHighestVersion" executed="True" result="Success" success="True" time="0.008" asserts="0" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>