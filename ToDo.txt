Build
  This release    
	-Token replacement should allow you to specify the delimiter around the token.
	-MSTest support
	-NuGet Deployments

	-Ensure runners have an additionalArgs parameter (maybe base classs this)
	-Review the wording around AddArguments on most of the runners. It seems inconsistent
	-Also review how arg building is done. It seems like each runner is doing it in its own way and that may be able to be centralized.
	-Expand .NET framework versions by the user in an easy fashion

  Future Releases
	-ability to specify (or detect) compiler to use for build files (current default is c#)
	-Script to convert nant files to the start of a fluent build file (there is a really rough one in the source repository).
		IDEA: use the nant code base to parse the nant file and then inspect the objects to generate the FluentBuild file.
		looks like project.cs has an (internal)InitializeProjectDocument() that calls CreateTask() method that builds the task objects.
	-Add Directory.Copy / .Move
	-Expand .NET framework versions by the user in an easy fashion
    -Persistant variable storage. I.e. be able to store a variable in a build then have it accessable on the next run. Usefull for counters for local build scripts
    -multiple targets. i.e. -C:MainBuild[Clean,Compile,Deploy]
	-Multithreaded builds
	-Plugin for VS to do builds
    -One time tasks (only run the first time the script is run on that computer)
	-SFTP lib: http://sourceforge.net/projects/dotnetssh/files/
    -Start VS web server C:\Program Files (x86)\Common Files\microsoft shared\DevServer\9.0
    -Allow message verbosity to be changed from TeamCity
    -If tests are marked as Ignore() for too long then fail the build?
	-Xml MessageLogger
    -Sandcastle generator
    -Ability to change default console colors
	-Add in architecture detection
	-Security Audit functionality build in. Check release build, custom errors, compilation debug=false, trace off, identity element containing password, connection strings (in any element including sessionState) should not have a password, warn on trust level not being set?
	-May want to hide classes outside of core namespace from intellisense to help make things clearer. [Browsable(false)] & [EditorBrowsable(EditorBrowsableState.Never)]
	-Add in support for publishing to CodePlex/SourceForge/Etc.
	-It would be nice to have zip be able to output to the folder containing source. I.e. zip("c:\\temp\\).OutputTo("c:\\temp\\out.zip"). 
	-For MSBuild might want to have Configuration.Debug .Release .Custom("myconfig")
	-CopyBuildArtifact may want to have it return a new BuildArtifact with the folder.
	-BuildFile.InvokeNextTask: maybe this should be private and then invoked via reflection from fb.exe (or else internalVisibleTo) to prevent users from running it
	-Click once deployment manifest writing
    -MessageLogger: see if it can be detected by checking the standard handle (apparently 7) vs the current handle
	-Gather usage data of functions used/success rates/ etc. Maybe have fb.exe and fb-nousagestats.exe
	-SVCUtil: Run.Executable(Defaults.FrameworkVersion.GetPathToSdk() + @"\bin\svcutil.exe")
                    .WithArguments
                    (
                    "http://localhost:53555/Rapter2Service.svc",
                    "/out:\"" + serviceProxyFile + "\""
                    , "/language:VB"
                    , "/namespace:*,Rapter2Service"
                    , "/r:" + _dirCompile.File("Rapter2.DataContracts.dll")
                    , "/collectionType:System.Collections.Generic.List`1"
                    )
                    .Execute();
Database
-Ability to force minimum SQL server version (prevent compat issues)
-Have a local sql file folder that merges the changes in so you don't run your own SQL scripts on your own DB.
i.e. scripts/
			Create
			Update
			ToMerge
			
-undo scripts?
-sql script may want to get the changeset version number preprended so that conflicts don't occur 
	(i.e. I name my file 0001_helloWorld.sql and another dev names his 0001_dropDAtabase.sql which one runs first?)
-input validation on variables for potential SQL / Filesystem injection
